{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marvi\\\\IdeaProjects\\\\NFE114\\\\Projet NFP119\\\\src\\\\components\\\\ListTasks.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { addTask, deleteTaskById, getTasks, updateTaskById } from '../services/task.service';\nimport { getUsers } from '../services/user.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTasks = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const onclick = () => {\n    alert('click button');\n  };\n  const [isOpenForm, setOpenForm] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [updatedTasks, setUpdatedTasks] = useState(tasks);\n  useEffect(() => {\n    const getTasksData = async () => {\n      const tasks = await getTasks();\n      setTasks(tasks);\n    };\n    getTasksData();\n    const getUsersData = async () => {\n      const users = await getUsers();\n      setUsers(users);\n    };\n    getUsersData();\n  }, [refresh]);\n  const sendNewTask = formData => {\n    setOpenForm(false);\n    const add = async taskAdd => {\n      taskAdd.statut = \"En cours\";\n      const task = await addTask(taskAdd);\n      setRefresh(refresh + 1);\n    };\n    add(formData);\n  };\n  const handleDeleteTask = async id => {\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer cette tâche ?\")) {\n      await deleteTaskById(id);\n      setRefresh(refresh + 1);\n    }\n  };\n  const getUserNameById = userId => {\n    if (userId != null) {\n      const user = users === null || users === void 0 ? void 0 : users.find(user => user._id === userId);\n      return user ? user.name : '-';\n    }\n    return '';\n  };\n  const handleUpdateStatus = async (taskId, newStatus) => {\n    const updatedTask = {\n      ...updatedTasks.find(task => task._id === taskId),\n      statut: newStatus\n    };\n    await updateTaskById(taskId, updatedTask);\n    setUpdatedTasks(prevTasks => prevTasks.map(task => task._id === taskId ? updatedTask : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpenForm(true),\n        children: \"Ajouter une t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Titre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Statut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Utilisateur associ\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: updatedTasks === null || updatedTasks === void 0 ? void 0 : updatedTasks.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: val.statut,\n                onChange: e => handleUpdateStatus(val._id, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"En cours\",\n                  children: \"En cours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Termin\\xE9e\",\n                  children: \"Termin\\xE9e\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getUserNameById(val.userId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTask(val._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(ListTasks, \"/I+R2rmqoJXDh35hLyMtcKhwGzU=\");\n_c = ListTasks;\nexport default ListTasks;\nvar _c;\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"names":["useEffect","useState","addTask","deleteTaskById","getTasks","updateTaskById","getUsers","jsxDEV","_jsxDEV","ListTasks","_ref","_s","title","tasks","setTasks","users","setUsers","onclick","alert","isOpenForm","setOpenForm","refresh","setRefresh","updatedTasks","setUpdatedTasks","getTasksData","getUsersData","sendNewTask","formData","add","taskAdd","statut","task","handleDeleteTask","id","window","confirm","getUserNameById","userId","user","find","_id","name","handleUpdateStatus","taskId","newStatus","updatedTask","prevTasks","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","val","key","description","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Marvi/IdeaProjects/NFE114/Projet NFP119/src/components/ListTasks.tsx"],"sourcesContent":["import {FC, useEffect, useState} from 'react';\r\nimport Task from \"../types/Task\";\r\nimport User from \"../types/User\";\r\nimport {addTask, deleteTaskById, getTasks, updateTaskById} from '../services/task.service';\r\nimport {getUsers} from '../services/user.service';\r\nimport Modal from './Modal';\r\nimport TaskForm from './TaskForm';\r\n\r\ninterface ListTaskProps {\r\n    title: string;\r\n}\r\n\r\nconst ListTasks: FC<ListTaskProps> = ({title}: ListTaskProps) => {\r\n    const [tasks, setTasks] = useState<Task[] | null>([]);\r\n    const [users, setUsers] = useState<User[] | null>([]);\r\n    const onclick = () => {\r\n        alert('click button')\r\n    };\r\n    const [isOpenForm, setOpenForm] = useState(false);\r\n    const [refresh, setRefresh] = useState(0);\r\n    const [updatedTasks, setUpdatedTasks] = useState(tasks);\r\n\r\n    useEffect(() => {\r\n        const getTasksData = async () => {\r\n            const tasks: Task[] = await getTasks();\r\n            setTasks(tasks);\r\n        }\r\n        getTasksData();\r\n\r\n        const getUsersData = async () => {\r\n            const users: User[] = await getUsers();\r\n            setUsers(users);\r\n        }\r\n        getUsersData();\r\n    }, [refresh]);\r\n\r\n    const sendNewTask = (formData: any) => {\r\n        setOpenForm(false);\r\n        const add = async (taskAdd: Task) => {\r\n            taskAdd.statut = \"En cours\"\r\n            const task = await addTask(taskAdd);\r\n            setRefresh(refresh + 1);\r\n        }\r\n        add(formData);\r\n    }\r\n\r\n    const handleDeleteTask = async (id: string) => {\r\n        if (window.confirm(\"Êtes-vous sûr de vouloir supprimer cette tâche ?\")) {\r\n            await deleteTaskById(id);\r\n            setRefresh(refresh + 1);\r\n        }\r\n    }\r\n\r\n    const getUserNameById = (userId: string | undefined) => {\r\n        if (userId != null) {\r\n            const user = users?.find(user => user._id === userId);\r\n            return user ? user.name : '-';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const handleUpdateStatus = async (taskId: string, newStatus: string) => {\r\n        const updatedTask = { ...updatedTasks.find(task => task._id === taskId), statut: newStatus };\r\n        await updateTaskById(taskId, updatedTask);\r\n        setUpdatedTasks(prevTasks => prevTasks.map(task => task._id === taskId ? updatedTask : task));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n\r\n            <div>\r\n                <button onClick={() => setOpenForm(true)}>Ajouter une tâche</button>\r\n            </div>\r\n\r\n            <table className='center'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Titre</th>\r\n                    <th>Description</th>\r\n                    <th>Statut</th>\r\n                    <th>Utilisateur associé</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {updatedTasks?.map((val, key) => {\r\n                    return (\r\n                        <tr key={key}>\r\n                            <td>{val.title}</td>\r\n                            <td>{val.description}</td>\r\n                            <td>\r\n                                <select value={val.statut} onChange={e => handleUpdateStatus(val._id, e.target.value)}>\r\n                                    <option value=\"En cours\">En cours</option>\r\n                                    <option value=\"Terminée\">Terminée</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>{getUserNameById(val.userId)}</td>\r\n                            <td>\r\n                                <button onClick={() => handleDeleteTask(val._id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListTasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}