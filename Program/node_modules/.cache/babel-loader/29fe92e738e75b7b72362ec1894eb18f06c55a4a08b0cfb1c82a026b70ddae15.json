{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marvi\\\\IdeaProjects\\\\NFE114\\\\Projet NFP119\\\\src\\\\components\\\\ListTasks.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { addTask, getTasks, deleteTaskById } from '../services/task.service';\nimport { getUserById } from '../services/user.service';\nimport Modal from './Modal';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTasks = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n  const [isOpenForm, setOpenForm] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  useEffect(() => {\n    const getData = async () => {\n      const tasks = await getTasks();\n      console.log(tasks);\n      setTasks(tasks);\n    };\n    getData();\n  }, [refresh]);\n  const sendNewTask = formData => {\n    setOpenForm(false);\n    const add = async taskAdd => {\n      const task = await addTask(taskAdd);\n      setRefresh(refresh + 1);\n    };\n    add(formData);\n  };\n  const handleDeleteTask = async id => {\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer cette tâche ?\")) {\n      await deleteTaskById(id);\n      setRefresh(refresh + 1);\n    }\n  };\n  const getUserDisplayName = async userId => {\n    if (!userId) {\n      return '';\n    }\n    const user = await getUserById(userId);\n    return user.name;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpenForm(true),\n        children: \"Ajouter une t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpenForm,\n        onClose: () => setOpenForm(false),\n        title: \"Enregistrer une t\\xE2che\",\n        content: /*#__PURE__*/_jsxDEV(TaskForm, {\n          onSubmit: sendNewTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Titre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Utilisateur associ\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks === null || tasks === void 0 ? void 0 : tasks.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getUserDisplayName(val.userId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTask(val._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ListTasks, \"14hLwqmv3hipd7un2eNeW4hLbpg=\");\n_c = ListTasks;\nexport default ListTasks;\nvar _c;\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"names":["useState","useEffect","addTask","getTasks","deleteTaskById","getUserById","Modal","TaskForm","jsxDEV","_jsxDEV","ListTasks","_ref","_s","title","tasks","setTasks","isOpenForm","setOpenForm","refresh","setRefresh","getData","console","log","sendNewTask","formData","add","taskAdd","task","handleDeleteTask","id","window","confirm","getUserDisplayName","userId","user","name","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","content","onSubmit","className","map","val","key","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/Marvi/IdeaProjects/NFE114/Projet NFP119/src/components/ListTasks.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\r\nimport Task from \"../types/Task\";\r\nimport User from \"../types/User\";\r\nimport { addTask, getTaskById, getTasks, updateTaskById, deleteTaskById } from '../services/task.service';\r\nimport { getUserById } from '../services/user.service';\r\nimport Modal from './Modal';\r\nimport TaskForm from './TaskForm';\r\nimport { IoEyeSharp, IoAddCircle } from 'react-icons/io5';\r\n\r\ninterface ListTaskProps {\r\n    title: string;\r\n}\r\n\r\nconst ListTasks: FC<ListTaskProps> = ({ title }: ListTaskProps) => {\r\n    const [tasks, setTasks] = useState<Task[] | null>([]);\r\n    const [isOpenForm, setOpenForm] = useState(false);\r\n    const [refresh, setRefresh] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const tasks: Task[] = await getTasks();\r\n            console.log(tasks);\r\n            setTasks(tasks);\r\n        }\r\n        getData();\r\n    }, [refresh]);\r\n\r\n    const sendNewTask = (formData: any) => {\r\n        setOpenForm(false);\r\n        const add = async (taskAdd : Task)=>{\r\n            const task = await addTask(taskAdd);\r\n            setRefresh(refresh+1);\r\n        }\r\n        add(formData);\r\n    }\r\n\r\n    const handleDeleteTask = async (id: string) => {\r\n        if(window.confirm(\"Êtes-vous sûr de vouloir supprimer cette tâche ?\")) {\r\n            await deleteTaskById(id);\r\n            setRefresh(refresh+1);\r\n        }\r\n    }\r\n\r\n    const getUserDisplayName = async (userId: string): Promise<string> => {\r\n        if (!userId) {\r\n            return '';\r\n        }\r\n\r\n        const user: User = await getUserById(userId);\r\n        return user.name;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n\r\n            <div>\r\n                <button onClick={() => setOpenForm(true)}>Ajouter une tâche</button>\r\n                <Modal\r\n                    isOpen={isOpenForm}\r\n                    onClose={() => setOpenForm(false)}\r\n                    title=\"Enregistrer une tâche\"\r\n                    content={<TaskForm onSubmit={sendNewTask} />}\r\n                />\r\n\r\n            </div>\r\n            <table className='center'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Titre</th>\r\n                    <th>Description</th>\r\n                    <th>Utilisateur associé</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n\r\n                </thead>\r\n                <tbody>\r\n                {tasks?.map((val, key) => {\r\n                    return (\r\n                        <tr key={key}>\r\n                            <td>{val.title}</td>\r\n                            <td>{val.description}</td>\r\n                            <td>{getUserDisplayName(val.userId)}</td>\r\n                            <td>\r\n                                <button onClick={() => handleDeleteTask(val._id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListTasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}