{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marvi\\\\IdeaProjects\\\\NFE114\\\\Projet NFP119\\\\src\\\\components\\\\ListTasks.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { addTask, getTasks, deleteTaskById } from '../services/task.service';\nimport { getUserById } from '../services/user.service';\nimport Modal from './Modal';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTasks = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const onclick = () => {\n    alert('click button');\n  };\n  const [isOpenForm, setOpenForm] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  useEffect(() => {\n    const getData = async () => {\n      const tasks = await getTasks();\n      console.log(tasks);\n      setTasks(tasks);\n      const users = await Promise.all(tasks.map(task => getUserById(task.userId)));\n      console.log(users);\n      setUsers(users);\n    };\n    getData();\n  }, [refresh]);\n  const sendNewTask = formData => {\n    setOpenForm(false);\n    const add = async taskAdd => {\n      const task = await addTask(taskAdd);\n      setRefresh(refresh + 1);\n    };\n    add(formData);\n  };\n  const handleDeleteTask = async id => {\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer cette tâche ?\")) {\n      await deleteTaskById(id);\n      setRefresh(refresh + 1);\n    }\n  };\n  const getUserName = userId => {\n    const user = users === null || users === void 0 ? void 0 : users.find(user => user._id === userId);\n    return (user === null || user === void 0 ? void 0 : user.name) || \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpenForm(true),\n        children: \"Ajouter une t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpenForm,\n        onClose: () => setOpenForm(false),\n        title: \"Enregistrer une t\\xE2che\",\n        content: /*#__PURE__*/_jsxDEV(TaskForm, {\n          onSubmit: sendNewTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Titre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Utilisateur associ\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks === null || tasks === void 0 ? void 0 : tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getUserName(task.userId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTask(task._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(ListTasks, \"BTHrR0IFew5g4/n0OUoKCoIMwZ0=\");\n_c = ListTasks;\nexport default ListTasks;\nvar _c;\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"names":["useState","useEffect","addTask","getTasks","deleteTaskById","getUserById","Modal","TaskForm","jsxDEV","_jsxDEV","ListTasks","_ref","_s","title","tasks","setTasks","users","setUsers","onclick","alert","isOpenForm","setOpenForm","refresh","setRefresh","getData","console","log","Promise","all","map","task","userId","sendNewTask","formData","add","taskAdd","handleDeleteTask","id","window","confirm","getUserName","user","find","_id","name","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","content","onSubmit","className","index","description","_c","$RefreshReg$"],"sources":["C:/Users/Marvi/IdeaProjects/NFE114/Projet NFP119/src/components/ListTasks.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\r\nimport Task from \"../types/Task\";\r\nimport User from \"../types/User\";\r\nimport { addTask, getTaskById, getTasks, updateTaskById, deleteTaskById } from '../services/task.service';\r\nimport { getUserById } from '../services/user.service';\r\nimport Modal from './Modal';\r\nimport TaskForm from './TaskForm';\r\nimport { IoEyeSharp, IoAddCircle } from 'react-icons/io5';\r\n\r\ninterface ListTaskProps {\r\n    title: string;\r\n}\r\n\r\nconst ListTasks: FC<ListTaskProps> = ({ title }: ListTaskProps) => {\r\n    const [tasks, setTasks] = useState<Task[] | null>([]);\r\n    const [users, setUsers] = useState<User[] | null>([]);\r\n    const onclick = () => { alert('click button') };\r\n    const [isOpenForm, setOpenForm] = useState(false);\r\n    const [refresh, setRefresh] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const tasks: Task[] = await getTasks();\r\n            console.log(tasks);\r\n            setTasks(tasks);\r\n\r\n            const users: User[] = await Promise.all(tasks.map(task => getUserById(task.userId)));\r\n            console.log(users);\r\n            setUsers(users);\r\n        };\r\n        getData();\r\n    }, [refresh]);\r\n\r\n    const sendNewTask = (formData: any) => {\r\n        setOpenForm(false);\r\n        const add = async (taskAdd: Task) => {\r\n            const task = await addTask(taskAdd);\r\n            setRefresh(refresh + 1);\r\n        };\r\n\r\n        add(formData);\r\n    };\r\n\r\n    const handleDeleteTask = async (id: string) => {\r\n        if (window.confirm(\"Êtes-vous sûr de vouloir supprimer cette tâche ?\")) {\r\n            await deleteTaskById(id);\r\n            setRefresh(refresh + 1);\r\n        }\r\n    };\r\n\r\n    const getUserName = (userId: string | undefined) => {\r\n        const user = users?.find(user => user._id === userId);\r\n        return user?.name || \"\";\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n\r\n            <div>\r\n                <button onClick={() => setOpenForm(true)}>Ajouter une tâche</button>\r\n                <Modal\r\n                    isOpen={isOpenForm}\r\n                    onClose={() => setOpenForm(false)}\r\n                    title=\"Enregistrer une tâche\"\r\n                    content={<TaskForm onSubmit={sendNewTask} />}\r\n                />\r\n\r\n            </div>\r\n            <table className='center'>\r\n                <thead>\r\n                <tr>\r\n                    <th>Titre</th>\r\n                    <th>Description</th>\r\n                    <th>Utilisateur associé</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {tasks?.map((task, index) => (\r\n                    <tr key={index}>\r\n                        <td>{task.title}</td>\r\n                        <td>{task.description}</td>\r\n                        <td>{getUserName(task.userId)}</td>\r\n                        <td>\r\n                            <button onClick={() => handleDeleteTask(task._id)}>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListTasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}