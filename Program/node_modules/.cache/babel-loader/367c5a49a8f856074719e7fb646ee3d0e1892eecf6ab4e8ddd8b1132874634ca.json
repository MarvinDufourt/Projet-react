{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marvi\\\\IdeaProjects\\\\NFE114\\\\Projet NFP119\\\\src\\\\components\\\\UserTasksList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTasks } from '../services/task.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksList = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [userTasks, setUserTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const tasks = await getTasks();\n      const filteredTasks = tasks.filter(task => task.userId === userId);\n      setUserTasks(filteredTasks);\n    };\n    fetchTasks();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tasks for User \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.title\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(UserTasksList, \"DBF9oooyOkc3EVP51JSo2bwrgxU=\");\n_c = UserTasksList;\nexport default UserTasksList;\nvar _c;\n$RefreshReg$(_c, \"UserTasksList\");","map":{"version":3,"names":["React","useState","useEffect","getTasks","jsxDEV","_jsxDEV","UserTasksList","_ref","_s","userId","userTasks","setUserTasks","fetchTasks","tasks","filteredTasks","filter","task","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","id","_c","$RefreshReg$"],"sources":["C:/Users/Marvi/IdeaProjects/NFE114/Projet NFP119/src/components/UserTasksList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getTasks } from '../services/task.service';\r\n\r\ninterface UserTasksListProps {\r\n    userId: \"string\";\r\n}\r\n\r\nconst UserTasksList = ({ userId }: UserTasksListProps) => {\r\n    const [userTasks, setUserTasks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            const tasks = await getTasks();\r\n            const filteredTasks = tasks.filter(task => task.userId === userId);\r\n            setUserTasks(filteredTasks);\r\n        };\r\n        fetchTasks();\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Tasks for User {userId}</h2>\r\n            <ul>\r\n                {userTasks.map(task => (\r\n                    <li key={task.id}>{task.title}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserTasksList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMpD,MAAMC,aAAa,GAAGC,IAAA,IAAoC;EAAAC,EAAA;EAAA,IAAnC;IAAEC;EAA2B,CAAC,GAAAF,IAAA;EACjD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,KAAK,GAAG,MAAMV,QAAQ,EAAE;MAC9B,MAAMW,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACP,MAAM,KAAKA,MAAM,CAAC;MAClEE,YAAY,CAACG,aAAa,CAAC;IAC/B,CAAC;IACDF,UAAU,EAAE;EAChB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,oBACIJ,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,GAAI,iBAAe,EAACR,MAAM;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChChB,OAAA;MAAAY,QAAA,EACKP,SAAS,CAACY,GAAG,CAACN,IAAI,iBACfX,OAAA;QAAAY,QAAA,EAAmBD,IAAI,CAACO;MAAK,GAApBP,IAAI,CAACQ,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEd,CAAC;AAACb,EAAA,CAtBIF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAwBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}