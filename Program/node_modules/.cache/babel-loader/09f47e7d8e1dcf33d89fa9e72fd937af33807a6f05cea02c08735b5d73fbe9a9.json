{"ast":null,"code":"const getTasks = async () => {\n  console.log('get task try');\n  try {\n    const response = await fetch('http://localhost:8080/tasks');\n    return await response.json();\n  } catch (error) {\n    // traitement erreur\n    console.log(error);\n  }\n};\nconst addTask = async task => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  };\n  try {\n    const response = await fetch('http://localhost:8080/tasks', requestOptions);\n    return await response.json();\n  } catch (e) {\n    console.log(e);\n  }\n};\nconst updateTaskById = async (id, task) => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  };\n  try {\n    const response = await fetch(`http://localhost:8080/tasks/${id}`, requestOptions);\n    return await response.json();\n  } catch (e) {\n    console.log(e);\n  }\n};\nconst deleteTaskById = async id => {\n  const requestOptions = {\n    method: 'DELETE'\n  };\n  try {\n    const response = await fetch(`http://localhost:8080/tasks/${id}`, requestOptions);\n    return await response.json();\n  } catch (e) {\n    console.log(e);\n  }\n};\nconst getTaskById = async id => {\n  try {\n    const response = await fetch(`http://localhost:8080/tasks/${id}`);\n    return await response.json();\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport { getTasks, addTask, updateTaskById, deleteTaskById, getTaskById };","map":{"version":3,"names":["getTasks","console","log","response","fetch","json","error","addTask","task","requestOptions","method","headers","body","JSON","stringify","e","updateTaskById","id","deleteTaskById","getTaskById"],"sources":["C:/Users/Marvi/IdeaProjects/NFE114/Projet NFP119/src/services/task.service.ts"],"sourcesContent":["import Task from '../types/Task';\r\n\r\nconst getTasks = async () => {\r\n    console.log('get task try');\r\n    try {\r\n        const response = await fetch('http://localhost:8080/tasks');\r\n        return await response.json();\r\n    } catch (error) {\r\n        // traitement erreur\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nconst addTask = async (task: Task) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(task),\r\n    };\r\n    try {\r\n        const response = await fetch('http://localhost:8080/tasks', requestOptions);\r\n        return await response.json();\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nconst updateTaskById = async (id: string, task: Task) => {\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(task),\r\n    };\r\n    try {\r\n        const response = await fetch(`http://localhost:8080/tasks/${id}`, requestOptions);\r\n        return await response.json();\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nconst deleteTaskById = async (id: string) => {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n    };\r\n    try {\r\n        const response = await fetch(`http://localhost:8080/tasks/${id}`, requestOptions);\r\n        return await response.json();\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nconst getTaskById = async (id: string) => {\r\n    try {\r\n        const response = await fetch(`http://localhost:8080/tasks/${id}`);\r\n        return await response.json();\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nexport { getTasks, addTask, updateTaskById, deleteTaskById, getTaskById };"],"mappings":"AAEA,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;EACzBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC3B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3D,OAAO,MAAMD,QAAQ,CAACE,IAAI,EAAE;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ;IACAL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,MAAMC,OAAO,GAAG,MAAOC,IAAU,IAAK;EAClC,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;EAC7B,CAAC;EACD,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAEK,cAAc,CAAC;IAC3E,OAAO,MAAMN,QAAQ,CAACE,IAAI,EAAE;EAChC,CAAC,CAAC,OAAOU,CAAC,EAAE;IACRd,OAAO,CAACC,GAAG,CAACa,CAAC,CAAC;EAClB;AACJ,CAAC;AAED,MAAMC,cAAc,GAAG,MAAAA,CAAOC,EAAU,EAAET,IAAU,KAAK;EACrD,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;EAC7B,CAAC;EACD,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8Ba,EAAG,EAAC,EAAER,cAAc,CAAC;IACjF,OAAO,MAAMN,QAAQ,CAACE,IAAI,EAAE;EAChC,CAAC,CAAC,OAAOU,CAAC,EAAE;IACRd,OAAO,CAACC,GAAG,CAACa,CAAC,CAAC;EAClB;AACJ,CAAC;AAED,MAAMG,cAAc,GAAG,MAAOD,EAAU,IAAK;EACzC,MAAMR,cAAc,GAAG;IACnBC,MAAM,EAAE;EACZ,CAAC;EACD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8Ba,EAAG,EAAC,EAAER,cAAc,CAAC;IACjF,OAAO,MAAMN,QAAQ,CAACE,IAAI,EAAE;EAChC,CAAC,CAAC,OAAOU,CAAC,EAAE;IACRd,OAAO,CAACC,GAAG,CAACa,CAAC,CAAC;EAClB;AACJ,CAAC;AAED,MAAMI,WAAW,GAAG,MAAOF,EAAU,IAAK;EACtC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8Ba,EAAG,EAAC,CAAC;IACjE,OAAO,MAAMd,QAAQ,CAACE,IAAI,EAAE;EAChC,CAAC,CAAC,OAAOU,CAAC,EAAE;IACRd,OAAO,CAACC,GAAG,CAACa,CAAC,CAAC;EAClB;AACJ,CAAC;AAED,SAASf,QAAQ,EAAEO,OAAO,EAAES,cAAc,EAAEE,cAAc,EAAEC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}